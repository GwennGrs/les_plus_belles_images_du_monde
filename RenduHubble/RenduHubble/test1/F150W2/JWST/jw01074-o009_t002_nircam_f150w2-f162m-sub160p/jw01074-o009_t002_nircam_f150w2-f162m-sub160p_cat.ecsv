# %ECSV 1.0
# ---
# datatype:
# - {name: label, datatype: int64, description: Unique source identification label number}
# - {name: xcentroid, datatype: float64, format: .4f, description: X pixel value of the source centroid (0 indexed)}
# - {name: ycentroid, datatype: float64, format: .4f, description: Y pixel value of the source centroid (0 indexed)}
# - {name: sky_centroid.ra, unit: deg, datatype: float64}
# - {name: sky_centroid.dec, unit: deg, datatype: float64}
# - {name: aper_bkg_flux, unit: Jy, datatype: float64, format: .6e, description: The local background value calculated as the sigma-clipped
#     median value in the background annulus aperture}
# - {name: aper_bkg_flux_err, unit: Jy, datatype: float64, format: .6e, description: The standard error of the sigma-clipped median background
#     value}
# - {name: aper30_flux, unit: Jy, datatype: float64, format: .6e, description: Flux within the 30% encircled energy circular aperture}
# - {name: aper30_flux_err, unit: Jy, datatype: float64, format: .6e, description: Flux error within the 30% encircled energy circular
#     aperture}
# - {name: aper50_flux, unit: Jy, datatype: float64, format: .6e, description: Flux within the 50% encircled energy circular aperture}
# - {name: aper50_flux_err, unit: Jy, datatype: float64, format: .6e, description: Flux error within the 50% encircled energy circular
#     aperture}
# - {name: aper70_flux, unit: Jy, datatype: float64, format: .6e, description: Flux within the 70% encircled energy circular aperture}
# - {name: aper70_flux_err, unit: Jy, datatype: float64, format: .6e, description: Flux error within the 70% encircled energy circular
#     aperture}
# - {name: aper_total_flux, unit: Jy, datatype: float64, format: .6e, description: Total aperture-corrected flux based on the 70% encircled
#     energy circular aperture; should be used only for unresolved sources.}
# - {name: aper_total_flux_err, unit: Jy, datatype: float64, format: .6e, description: Total aperture-corrected flux error based on the
#     70% encircled energy circular aperture; should be used only for unresolved sources.}
# - {name: aper30_abmag, datatype: float64, format: .6f, description: AB magnitude within the 30% encircled energy circular aperture}
# - {name: aper30_abmag_err, datatype: float64, format: .6f, description: AB magnitude error within the 30% encircled energy circular
#     aperture}
# - {name: aper50_abmag, datatype: float64, format: .6f, description: AB magnitude within the 50% encircled energy circular aperture}
# - {name: aper50_abmag_err, datatype: float64, format: .6f, description: AB magnitude error within the 50% encircled energy circular
#     aperture}
# - {name: aper70_abmag, datatype: float64, format: .6f, description: AB magnitude within the 70% encircled energy circular aperture}
# - {name: aper70_abmag_err, datatype: float64, format: .6f, description: AB magnitude error within the 70% encircled energy circular
#     aperture}
# - {name: aper_total_abmag, datatype: float64, format: .6f, description: Total aperture-corrected AB magnitude based on the 70% encircled
#     energy circular aperture; should be used only for unresolved sources.}
# - {name: aper_total_abmag_err, datatype: float64, format: .6f, description: Total aperture-corrected AB magnitude error based on the
#     70% encircled energy circular aperture; should be used only for unresolved sources.}
# - {name: aper30_vegamag, datatype: float64, format: .6f, description: Vega magnitude within the 30% encircled energy circular aperture}
# - {name: aper30_vegamag_err, datatype: float64, format: .6f, description: Vega magnitude error within the 30% encircled energy circular
#     aperture}
# - {name: aper50_vegamag, datatype: float64, format: .6f, description: Vega magnitude within the 50% encircled energy circular aperture}
# - {name: aper50_vegamag_err, datatype: float64, format: .6f, description: Vega magnitude error within the 50% encircled energy circular
#     aperture}
# - {name: aper70_vegamag, datatype: float64, format: .6f, description: Vega magnitude within the 70% encircled energy circular aperture}
# - {name: aper70_vegamag_err, datatype: float64, format: .6f, description: Vega magnitude error within the 70% encircled energy circular
#     aperture}
# - {name: aper_total_vegamag, datatype: float64, format: .6f, description: Total aperture-corrected Vega magnitude based on the 70% encircled
#     energy circular aperture; should be used only for unresolved sources.}
# - {name: aper_total_vegamag_err, datatype: float64, format: .6f, description: Total aperture-corrected Vega magnitude error based on
#     the 70% encircled energy circular aperture; should be used only for unresolved sources.}
# - {name: CI_50_30, datatype: float64, format: .4f, description: Concentration index calculated as (aper50_flux / aper30_flux)}
# - {name: CI_70_50, datatype: float64, format: .4f, description: Concentration index calculated as (aper70_flux / aper50_flux)}
# - {name: CI_70_30, datatype: float64, format: .4f, description: Concentration index calculated as (aper70_flux / aper30_flux)}
# - {name: is_extended, datatype: bool, description: Flag indicating whether the source is extended}
# - {name: sharpness, datatype: float64, format: .6f, description: The DAOFind source sharpness statistic}
# - {name: roundness, datatype: float32, format: .6f, description: The DAOFind source roundness statistic}
# - {name: nn_label, datatype: int64, description: The label number of the nearest neighbor}
# - {name: nn_dist, unit: pix, datatype: float64, format: .6f, description: The distance in pixels to the nearest neighbor}
# - {name: isophotal_flux, unit: Jy, datatype: float64, format: .6e, description: Isophotal flux}
# - {name: isophotal_flux_err, unit: Jy, datatype: float32, format: .6e, description: Isophotal flux error}
# - {name: isophotal_abmag, datatype: float64, format: .6f, description: Isophotal AB magnitude}
# - {name: isophotal_abmag_err, datatype: float64, format: .6f, description: Isophotal AB magnitude error}
# - {name: isophotal_vegamag, datatype: float64, format: .6f, description: Isophotal Vega magnitude}
# - {name: isophotal_vegamag_err, datatype: float64, format: .6f, description: Isophotal Vega magnitude error}
# - {name: isophotal_area, unit: pix2, datatype: float64, description: Isophotal area}
# - {name: semimajor_sigma, unit: pix, datatype: float64, format: .6f, description: 1-sigma standard deviation along the semimajor axis
#     of the 2D Gaussian function that has the same second-order central moments as the source}
# - {name: semiminor_sigma, unit: pix, datatype: float64, format: .6f, description: 1-sigma standard deviation along the semiminor axis
#     of the 2D Gaussian function that has the same second-order central moments as the source}
# - {name: ellipticity, datatype: float64, format: .6f, description: 1 minus the ratio of the 1-sigma lengths of the semimajor and semiminor
#     axes}
# - {name: orientation, unit: deg, datatype: float64, format: .6f, description: The angle (degrees) between the positive X axis and the
#     major axis (increases counter-clockwise)}
# - {name: sky_orientation, unit: deg, datatype: float64, format: .6f, description: The position angle (degrees) from North of the major
#     axis}
# - {name: sky_bbox_ll.ra, unit: deg, datatype: float64}
# - {name: sky_bbox_ll.dec, unit: deg, datatype: float64}
# - {name: sky_bbox_ul.ra, unit: deg, datatype: float64}
# - {name: sky_bbox_ul.dec, unit: deg, datatype: float64}
# - {name: sky_bbox_lr.ra, unit: deg, datatype: float64}
# - {name: sky_bbox_lr.dec, unit: deg, datatype: float64}
# - {name: sky_bbox_ur.ra, unit: deg, datatype: float64}
# - {name: sky_bbox_ur.dec, unit: deg, datatype: float64}
# meta: !!omap
# - {date: '2023-11-23 00:46:40 UTC'}
# - version: {Python: 3.9.17, astropy: 5.3.1, bottleneck: null, gwcs: 0.18.3, jwst: 1.11.4, numpy: 1.25.1, photutils: 1.8.0, scipy: 1.9.3,
#     skimage: null}
# - {localbkg_width: 0}
# - {apermask_method: correct}
# - kron_params: !!python/tuple [2.5, 1.4, 0.0]
# - aperture_params:
#     aperture_corrections: !numpy.ndarray
#       buffer: !!binary |
#         aGV0VlFLQ0pBRUNoK0xrLw==
#       dtype: float32
#       order: C
#       shape: !!python/tuple [3]
#     aperture_ee: !numpy.ndarray
#       buffer: !!binary |
#         SGdBQUFBQUFBQUF5QUFBQUFBQUFBRVlBQUFBQUFBQUE=
#       dtype: int64
#       order: C
#       shape: !!python/tuple [3]
#     aperture_radii: !numpy.ndarray
#       buffer: !!binary |
#         SlFaaFAvaFRzejl0NTFOQQ==
#       dtype: float32
#       order: C
#       shape: !!python/tuple [3]
#     bkg_aperture_inner_radius: 6.1519999504089355
#     bkg_aperture_outer_radius: 9.20199966430664
# - {abvega_offset: 1.37644}
# - __serialized_columns__:
#     aper30_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: &id001 !astropy.units.Unit {unit: Jy}
#       value: !astropy.table.SerializedColumn {name: aper30_flux}
#     aper30_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper30_flux_err}
#     aper50_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper50_flux}
#     aper50_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper50_flux_err}
#     aper70_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper70_flux}
#     aper70_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper70_flux_err}
#     aper_bkg_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper_bkg_flux}
#     aper_bkg_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper_bkg_flux_err}
#     aper_total_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper_total_flux}
#     aper_total_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: aper_total_flux_err}
#     ellipticity:
#       __class__: astropy.units.quantity.Quantity
#       unit: !astropy.units.Unit {unit: ''}
#       value: !astropy.table.SerializedColumn {name: ellipticity}
#     isophotal_area:
#       __class__: astropy.units.quantity.Quantity
#       unit: !astropy.units.Unit {unit: pix2}
#       value: !astropy.table.SerializedColumn {name: isophotal_area}
#     isophotal_flux:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: isophotal_flux}
#     isophotal_flux_err:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id001
#       value: !astropy.table.SerializedColumn {name: isophotal_flux_err}
#     nn_dist:
#       __class__: astropy.units.quantity.Quantity
#       unit: !astropy.units.Unit {unit: pix}
#       value: !astropy.table.SerializedColumn {name: nn_dist}
#     orientation:
#       __class__: astropy.units.quantity.Quantity
#       unit: &id002 !astropy.units.Unit {unit: deg}
#       value: !astropy.table.SerializedColumn {name: orientation}
#     semimajor_sigma:
#       __class__: astropy.units.quantity.Quantity
#       unit: !astropy.units.Unit {unit: pix}
#       value: !astropy.table.SerializedColumn {name: semimajor_sigma}
#     semiminor_sigma:
#       __class__: astropy.units.quantity.Quantity
#       unit: !astropy.units.Unit {unit: pix}
#       value: !astropy.table.SerializedColumn {name: semiminor_sigma}
#     sky_bbox_ll:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: Sky coordinate of the lower-left vertex of the minimal bounding box of the source}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ll.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ll.ra}
#         wrap_angle: &id003 !astropy.coordinates.Angle
#           unit: *id002
#           value: 360.0
#       representation_type: spherical
#     sky_bbox_lr:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: Sky coordinate of the lower-right vertex of the minimal bounding box of the source}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_lr.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_lr.ra}
#         wrap_angle: *id003
#       representation_type: spherical
#     sky_bbox_ul:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: Sky coordinate of the upper-left vertex of the minimal bounding box of the source}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ul.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ul.ra}
#         wrap_angle: *id003
#       representation_type: spherical
#     sky_bbox_ur:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: Sky coordinate of the upper-right vertex of the minimal bounding box of the source}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ur.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_bbox_ur.ra}
#         wrap_angle: *id003
#       representation_type: spherical
#     sky_centroid:
#       __class__: astropy.coordinates.sky_coordinate.SkyCoord
#       __info__: {description: ICRS Sky coordinate of the source centroid}
#       dec: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Latitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_centroid.dec}
#       frame: icrs
#       ra: !astropy.table.SerializedColumn
#         __class__: astropy.coordinates.angles.Longitude
#         unit: *id002
#         value: !astropy.table.SerializedColumn {name: sky_centroid.ra}
#         wrap_angle: *id003
#       representation_type: spherical
#     sky_orientation:
#       __class__: astropy.units.quantity.Quantity
#       unit: *id002
#       value: !astropy.table.SerializedColumn {name: sky_orientation}
# schema: astropy-2.0
label xcentroid ycentroid sky_centroid.ra sky_centroid.dec aper_bkg_flux aper_bkg_flux_err aper30_flux aper30_flux_err aper50_flux aper50_flux_err aper70_flux aper70_flux_err aper_total_flux aper_total_flux_err aper30_abmag aper30_abmag_err aper50_abmag aper50_abmag_err aper70_abmag aper70_abmag_err aper_total_abmag aper_total_abmag_err aper30_vegamag aper30_vegamag_err aper50_vegamag aper50_vegamag_err aper70_vegamag aper70_vegamag_err aper_total_vegamag aper_total_vegamag_err CI_50_30 CI_70_50 CI_70_30 is_extended sharpness roundness nn_label nn_dist isophotal_flux isophotal_flux_err isophotal_abmag isophotal_abmag_err isophotal_vegamag isophotal_vegamag_err isophotal_area semimajor_sigma semiminor_sigma ellipticity orientation sky_orientation sky_bbox_ll.ra sky_bbox_ll.dec sky_bbox_ul.ra sky_bbox_ul.dec sky_bbox_lr.ra sky_bbox_lr.dec sky_bbox_ur.ra sky_bbox_ur.dec
1 93.34835705299722 92.42822327475639 239.80646732738865 47.61161529741276 4.9567797759664245e-06 3.990676733791914e-07 0.004038718109486307 1.3885670251578124e-05 0.0076211767613145 1.8500226324755804e-05 0.013198824712904211 2.2215714703858433e-05 0.019176573112649482 3.22772130500219e-05 14.88439114558883 0.003726508455849602 14.194944913682582 0.002632405196592881 13.598661846876443 0.001825929945151124 13.19307249854914 0.001825929945151124 13.507951097371057 0.003726508455849602 12.818504865464808 0.002632405196592881 12.22222179865867 0.001825929945151124 11.816632450331367 0.001825929945151124 1.8870286449092761 1.7318617749298442 3.2680727783160375 False 0.6890788233102311 0.13004693 -1 nan 0.01695763688744023 2.6647098e-05 13.326586671213892 0.001704778289155863 11.950146622996119 0.001704778289155863 360.0 2.4894657502237427 2.1127871072995585 0.15130902800744694 -10.445155474279884 261.31134761487743 239.80627200276768 47.611720879620215 239.80626271847186 47.611516760920026 239.80666309194345 47.61171279435627 239.80665380612254 47.61150867568765
